#include <iostream>
#include <fstream>
#include <string>
#include <set>

using namespace std;

int main() {
    set<string> narr_words;
    set<string> excl_words;
    ifstream in("input.txt");
    string line,line1;
    char punct[] = ".?!";
    while (getline(in, line)) {
        for (int i = 0; i < line.size(); i++)
        {
            line1 += tolower(line[i]);
        }
        int pos = 0;
        while (true) {
            int end_pos = line1.find_first_of(punct, pos);
            if (end_pos == string::npos) {
                end_pos = line1.length();
            }
            string sentence = line1.substr(pos, end_pos - pos + 1);
            if (sentence.length() > 1) {
                string word;
                int word_start = -1;
                int word_end = -1;
                bool is_narr = sentence[sentence.length() - 1] == '.';
                for (int i = 0; i < sentence.length(); i++) {
                    if (isalpha(sentence[i])) {
                        if (word_start == -1) {
                            word_start = i;
                        }
                        word_end = i;
                    }
                    else {
                        if (word_start != -1) {
                            word = sentence.substr(word_start, word_end - word_start + 1);
                            if (isalpha(word[0])) {
                                if (is_narr) {
                                    narr_words.insert(word);
                                }
                                else {
                                    excl_words.insert(word);
                                }
                            }
                            word_start = -1;
                            word_end = -1;
                        }
                    }
                }
            }
            if (end_pos == line1.length()) {
                break;
            }
            pos = end_pos + 1;
        }
    }
    set<string> result;
    set <string> ::iterator it = narr_words.begin();
    string w;
    for (; it != narr_words.end();) {
        w = *it;
        if (excl_words.count(w) > 0) {
            it = narr_words.erase(it);
        }
        else it++;
    }
    set <string> ::iterator it1 = narr_words.begin();
    for (; it1 != narr_words.end(); it1++) {
        cout << *it1 << endl;
    }
    cout << narr_words.size() << endl;
    in.close();
    return 0;
}
