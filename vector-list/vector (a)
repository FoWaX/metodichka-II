#include <iostream>
#include <vector>
using namespace std;

int count_del(int n)
{
	int k = 0;
	for (int i = 1; i <= sqrt(n); i++)
	{
		if (n % i == 0)
		{
			if (n / i == i) k++;
			else k += 2;
		}
	}
	return k;
}

int main()
{
	vector<int> vc = { 26, 13, 27, 10, 7 };
	int first = count_del(vc.front());
	int mid = count_del(vc[vc.size() / 2]);
	int last = count_del(vc.back());

	if (first == mid || first == last) vc.front() = 0;
	if (mid == first || mid == last) vc[vc.size() / 2] = 0;
	if (last == first || last == mid) vc.back() = 0;

	for (int i : vc)
	{
		cout << i << ' ';
	}
	return 0;
}

Теоретическая временная сложность: O(sqrt(n)) для подсчета делителей. 
Выбор вектора обоснован тем, что нам нужен быстрый доступ к первому, среднему и последнему элементам.
